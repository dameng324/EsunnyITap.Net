//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace EsunnyITap.Net {

public class ITapTradeAPINotify : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ITapTradeAPINotify(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ITapTradeAPINotify obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(ITapTradeAPINotify obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~ITapTradeAPINotify() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          EsunnyITapApiPINVOKE.delete_ITapTradeAPINotify(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public virtual void OnConnect(string HostAddress) {

  }

  public virtual void OnRspLogin(int errorCode, TapAPITradeLoginRspInfo loginRspInfo) {

  }

  public virtual void OnRtnContactInfo(int errorCode, char isLast, string ContactInfo) {

  }

  public virtual void OnRspRequestVertificateCode(uint sessionID, int errorCode, TapAPIRequestVertificateCodeRsp rsp) {

  }

  public virtual void OnExpriationDate(string date, int days) {

  }

  public virtual void OnAPIReady(int errorCode) {

  }

  public virtual void OnDisconnect(int reasonCode) {

  }

  public virtual void OnRspChangePassword(uint sessionID, int errorCode) {

  }

  public virtual void OnRspAuthPassword(uint sessionID, int errorCode) {

  }

  public virtual void OnRspQryTradingDate(uint sessionID, int errorCode, TapAPITradingCalendarQryRsp info) {

  }

  public virtual void OnRspSetReservedInfo(uint sessionID, int errorCode, string info) {

  }

  public virtual void OnRspQryAccount(uint sessionID, uint errorCode, char isLast, TapAPIAccountInfo info) {

  }

  public virtual void OnRspQryFund(uint sessionID, int errorCode, char isLast, TapAPIFundData info) {

  }

  public virtual void OnRtnFund(TapAPIFundData info) {

  }

  public virtual void OnRspQryExchange(uint sessionID, int errorCode, char isLast, TapAPIExchangeInfo info) {

  }

  public virtual void OnRspQryCommodity(uint sessionID, int errorCode, char isLast, TapAPICommodityInfo info) {

  }

  public virtual void OnRspQryContract(uint sessionID, int errorCode, char isLast, TapAPITradeContractInfo info) {

  }

  public virtual void OnRtnContract(TapAPITradeContractInfo info) {

  }

  public virtual void OnRspOrderAction(uint sessionID, int errorCode, TapAPIOrderActionRsp info) {

  }

  public virtual void OnRtnOrder(TapAPIOrderInfoNotice info) {

  }

  public virtual void OnRspQryOrder(uint sessionID, int errorCode, char isLast, TapAPIOrderInfo info) {

  }

  public virtual void OnRspQryOrderProcess(uint sessionID, int errorCode, char isLast, TapAPIOrderInfo info) {

  }

  public virtual void OnRspQryFill(uint sessionID, int errorCode, char isLast, TapAPIFillInfo info) {

  }

  public virtual void OnRtnFill(TapAPIFillInfo info) {

  }

  public virtual void OnRspQryPosition(uint sessionID, int errorCode, char isLast, TapAPIPositionInfo info) {

  }

  public virtual void OnRtnPosition(TapAPIPositionInfo info) {

  }

  public virtual void OnRspQryPositionSummary(uint sessionID, int errorCode, char isLast, TapAPIPositionSummary info) {

  }

  public virtual void OnRtnPositionSummary(TapAPIPositionSummary info) {

  }

  public virtual void OnRtnPositionProfit(TapAPIPositionProfitNotice info) {

  }

  public virtual void OnRspQryCurrency(uint sessionID, int errorCode, char isLast, TapAPICurrencyInfo info) {

  }

  public virtual void OnRspQryTradeMessage(uint sessionID, int errorCode, char isLast, TapAPITradeMessage info) {

  }

  public virtual void OnRtnTradeMessage(TapAPITradeMessage info) {

  }

  public virtual void OnRspQryHisOrder(uint sessionID, int errorCode, char isLast, TapAPIHisOrderQryRsp info) {

  }

  public virtual void OnRspQryHisOrderProcess(uint sessionID, int errorCode, char isLast, TapAPIHisOrderQryRsp info) {

  }

  public virtual void OnRspQryHisMatch(uint sessionID, int errorCode, char isLast, TapAPIHisMatchQryRsp info) {

  }

  public virtual void OnRspQryHisPosition(uint sessionID, int errorCode, char isLast, TapAPIHisPositionQryRsp info) {

  }

  public virtual void OnRspQryHisDelivery(uint sessionID, int errorCode, char isLast, TapAPIHisDeliveryQryRsp info) {

  }

  public virtual void OnRspQryHisFund(uint sessionID, int errorCode, char isLast, TapAPIHisFundQryRsp info) {

  }

  public virtual void OnRspQryAccountCashAdjust(uint sessionID, int errorCode, char isLast, TapAPIAccountCashAdjustQryRsp info) {

  }

  public virtual void OnRspQryBill(uint sessionID, int errorCode, char isLast, TapAPIBillQryRsp info) {

  }

  public virtual void OnRspQryAccountFeeRent(uint sessionID, int errorCode, char isLast, TapAPIAccountFeeRentQryRsp info) {

  }

  public virtual void OnRspQryAccountMarginRent(uint sessionID, int errorCode, char isLast, TapAPIAccountMarginRentQryRsp info) {

  }

  public virtual void OnRspHKMarketOrderInsert(uint sessionID, int errorCode, TapAPIOrderMarketInsertRsp info) {

  }

  public virtual void OnRspHKMarketOrderDelete(uint sessionID, int errorCode, TapAPIOrderMarketInsertRsp info) {

  }

  public virtual void OnHKMarketQuoteNotice(TapAPIOrderQuoteMarketNotice info) {

  }

  public virtual void OnRspOrderLocalRemove(uint sessionID, int errorCode, TapAPIOrderLocalRemoveRsp info) {

  }

  public virtual void OnRspOrderLocalInput(uint sessionID, int errorCode, TapAPIOrderInfo info) {

  }

  public virtual void OnRspOrderLocalModify(uint sessionID, int errorCode, TapAPIOrderInfo info) {

  }

  public virtual void OnRspOrderLocalTransfer(uint sessionID, int errorCode, TapAPIOrderInfo info) {

  }

  public virtual void OnRspFillLocalInput(uint sessionID, int errorCode, TapAPIFillLocalInputReq info) {

  }

  public virtual void OnRspFillLocalRemove(uint sessionID, int errorCode, TapAPIFillLocalRemoveReq info) {

  }

  public virtual void OnRspQrySpotLock(uint sessionID, int errorCode, char isLast, TapAPISpotLockDataRsp info) {

  }

  public virtual void OnRtnSpotLock(TapAPISpotLockDataRsp info) {

  }

  public virtual void OnRspSubmitUserLoginInfo(uint sessionID, int errorCode, char isLast, TapAPISubmitUserLoginRspInfo info) {

  }

  public virtual void OnRspSpecialOrderAction(uint sessionID, int errorCode, TapAPISpecialOrderInfo info) {

  }

  public virtual void OnRtnSpecialOrder(TapAPISpecialOrderInfo info) {

  }

  public virtual void OnRspQrySpecialOrder(uint sessionID, int errorCode, char isLast, TapAPISpecialOrderInfo info) {

  }

  public virtual void OnRspQryCombinePosition(uint sessionID, int errorCode, char isLast, TapAPICombinePositionInfo info) {

  }

  public virtual void OnRtnCombinePosition(TapAPICombinePositionInfo info) {

  }

  public virtual void OnRspQryUserTrustDevice(uint sessionID, int errorCode, char isLast, TapAPIUserTrustDeviceQryRsp info) {

  }

  public virtual void OnRspAddUserTrustDevice(uint sessionID, int errorCode, TapAPIUserTrustDeviceQryRsp info) {

  }

  public virtual void OnRspDelUserTrustDevice(uint sessionID, int errorCode, TapAPIUserTrustDeviceDelReq info) {

  }

  public virtual void OnRtnAddUserTrustDevice(TapAPIUserTrustDeviceQryRsp info) {

  }

  public virtual void OnRtnDelUserTrustDevice(TapAPIUserTrustDeviceDelReq info) {

  }

  public virtual void OnRspQryIPOInfo(uint sessionID, int errorCode, char isLast, TapAPIIPOInfoQryRsp info) {

  }

  public virtual void OnRspQryIPOStockQty(uint sessionID, int errorCode, char isLast, TapAPIAvailableApplyQryRsp info) {

  }

  public virtual void OnRspQryAccountIPO(uint sessionID, int errorCode, char isLast, TapAPIAccountIPOQryRsp info) {

  }

  public virtual void OnRspAddAccountIPO(uint sessionID, int errorCode, TapAPIAccountIPOQryRsp info) {

  }

  public virtual void OnRspCancelAccountIPO(uint sessionID, int errorCode, TapAPIAccountIPOQryRsp info) {

  }

  public virtual void OnRtnAddAccountIPO(TapAPIAccountIPOQryRsp info) {

  }

  public virtual void OnRtnCancelAccountIPO(TapAPIAccountIPOQryRsp info) {

  }

  public virtual void OnRspSelfPasswordInfoOperate(int errorCode) {

  }

  public virtual void OnRspVerificateIdentityInfo(uint sessionID, int errorCode) {

  }

  public virtual void OnRspSetVertificateCode(uint sessionID, int errorCode) {

  }

  public virtual void OnRspResetPassword(uint sessionID, int errorCode) {

  }

  public virtual void OnRspQryExchangeStateInfo(uint sessionID, int errorCode, char isLast, TapAPIExchangeStateInfoQryRsp info) {

  }

  public virtual void OnRtnExchangeStateInfo(TapAPIExchangeStateInfoQryRsp info) {

  }

  public ITapTradeAPINotify() : this(EsunnyITapApiPINVOKE.new_ITapTradeAPINotify__SWIG_0(), true) {
    SwigDirectorConnect();
  }

  public ITapTradeAPINotify(ITapTradeAPINotify other) : this(EsunnyITapApiPINVOKE.new_ITapTradeAPINotify__SWIG_1(ITapTradeAPINotify.getCPtr(other)), true) {
    if (EsunnyITapApiPINVOKE.SWIGPendingException.Pending) throw EsunnyITapApiPINVOKE.SWIGPendingException.Retrieve();
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    
      swigDelegate0 = new SwigDelegateITapTradeAPINotify_0(SwigDirectorMethodOnConnect);
    
      swigDelegate1 = new SwigDelegateITapTradeAPINotify_1(SwigDirectorMethodOnRspLogin);
    
      swigDelegate2 = new SwigDelegateITapTradeAPINotify_2(SwigDirectorMethodOnRtnContactInfo);
    
      swigDelegate3 = new SwigDelegateITapTradeAPINotify_3(SwigDirectorMethodOnRspRequestVertificateCode);
    
      swigDelegate4 = new SwigDelegateITapTradeAPINotify_4(SwigDirectorMethodOnExpriationDate);
    
      swigDelegate5 = new SwigDelegateITapTradeAPINotify_5(SwigDirectorMethodOnAPIReady);
    
      swigDelegate6 = new SwigDelegateITapTradeAPINotify_6(SwigDirectorMethodOnDisconnect);
    
      swigDelegate7 = new SwigDelegateITapTradeAPINotify_7(SwigDirectorMethodOnRspChangePassword);
    
      swigDelegate8 = new SwigDelegateITapTradeAPINotify_8(SwigDirectorMethodOnRspAuthPassword);
    
      swigDelegate9 = new SwigDelegateITapTradeAPINotify_9(SwigDirectorMethodOnRspQryTradingDate);
    
      swigDelegate10 = new SwigDelegateITapTradeAPINotify_10(SwigDirectorMethodOnRspSetReservedInfo);
    
      swigDelegate11 = new SwigDelegateITapTradeAPINotify_11(SwigDirectorMethodOnRspQryAccount);
    
      swigDelegate12 = new SwigDelegateITapTradeAPINotify_12(SwigDirectorMethodOnRspQryFund);
    
      swigDelegate13 = new SwigDelegateITapTradeAPINotify_13(SwigDirectorMethodOnRtnFund);
    
      swigDelegate14 = new SwigDelegateITapTradeAPINotify_14(SwigDirectorMethodOnRspQryExchange);
    
      swigDelegate15 = new SwigDelegateITapTradeAPINotify_15(SwigDirectorMethodOnRspQryCommodity);
    
      swigDelegate16 = new SwigDelegateITapTradeAPINotify_16(SwigDirectorMethodOnRspQryContract);
    
      swigDelegate17 = new SwigDelegateITapTradeAPINotify_17(SwigDirectorMethodOnRtnContract);
    
      swigDelegate18 = new SwigDelegateITapTradeAPINotify_18(SwigDirectorMethodOnRspOrderAction);
    
      swigDelegate19 = new SwigDelegateITapTradeAPINotify_19(SwigDirectorMethodOnRtnOrder);
    
      swigDelegate20 = new SwigDelegateITapTradeAPINotify_20(SwigDirectorMethodOnRspQryOrder);
    
      swigDelegate21 = new SwigDelegateITapTradeAPINotify_21(SwigDirectorMethodOnRspQryOrderProcess);
    
      swigDelegate22 = new SwigDelegateITapTradeAPINotify_22(SwigDirectorMethodOnRspQryFill);
    
      swigDelegate23 = new SwigDelegateITapTradeAPINotify_23(SwigDirectorMethodOnRtnFill);
    
      swigDelegate24 = new SwigDelegateITapTradeAPINotify_24(SwigDirectorMethodOnRspQryPosition);
    
      swigDelegate25 = new SwigDelegateITapTradeAPINotify_25(SwigDirectorMethodOnRtnPosition);
    
      swigDelegate26 = new SwigDelegateITapTradeAPINotify_26(SwigDirectorMethodOnRspQryPositionSummary);
    
      swigDelegate27 = new SwigDelegateITapTradeAPINotify_27(SwigDirectorMethodOnRtnPositionSummary);
    
      swigDelegate28 = new SwigDelegateITapTradeAPINotify_28(SwigDirectorMethodOnRtnPositionProfit);
    
      swigDelegate29 = new SwigDelegateITapTradeAPINotify_29(SwigDirectorMethodOnRspQryCurrency);
    
      swigDelegate30 = new SwigDelegateITapTradeAPINotify_30(SwigDirectorMethodOnRspQryTradeMessage);
    
      swigDelegate31 = new SwigDelegateITapTradeAPINotify_31(SwigDirectorMethodOnRtnTradeMessage);
    
      swigDelegate32 = new SwigDelegateITapTradeAPINotify_32(SwigDirectorMethodOnRspQryHisOrder);
    
      swigDelegate33 = new SwigDelegateITapTradeAPINotify_33(SwigDirectorMethodOnRspQryHisOrderProcess);
    
      swigDelegate34 = new SwigDelegateITapTradeAPINotify_34(SwigDirectorMethodOnRspQryHisMatch);
    
      swigDelegate35 = new SwigDelegateITapTradeAPINotify_35(SwigDirectorMethodOnRspQryHisPosition);
    
      swigDelegate36 = new SwigDelegateITapTradeAPINotify_36(SwigDirectorMethodOnRspQryHisDelivery);
    
      swigDelegate37 = new SwigDelegateITapTradeAPINotify_37(SwigDirectorMethodOnRspQryHisFund);
    
      swigDelegate38 = new SwigDelegateITapTradeAPINotify_38(SwigDirectorMethodOnRspQryAccountCashAdjust);
    
      swigDelegate39 = new SwigDelegateITapTradeAPINotify_39(SwigDirectorMethodOnRspQryBill);
    
      swigDelegate40 = new SwigDelegateITapTradeAPINotify_40(SwigDirectorMethodOnRspQryAccountFeeRent);
    
      swigDelegate41 = new SwigDelegateITapTradeAPINotify_41(SwigDirectorMethodOnRspQryAccountMarginRent);
    
      swigDelegate42 = new SwigDelegateITapTradeAPINotify_42(SwigDirectorMethodOnRspHKMarketOrderInsert);
    
      swigDelegate43 = new SwigDelegateITapTradeAPINotify_43(SwigDirectorMethodOnRspHKMarketOrderDelete);
    
      swigDelegate44 = new SwigDelegateITapTradeAPINotify_44(SwigDirectorMethodOnHKMarketQuoteNotice);
    
      swigDelegate45 = new SwigDelegateITapTradeAPINotify_45(SwigDirectorMethodOnRspOrderLocalRemove);
    
      swigDelegate46 = new SwigDelegateITapTradeAPINotify_46(SwigDirectorMethodOnRspOrderLocalInput);
    
      swigDelegate47 = new SwigDelegateITapTradeAPINotify_47(SwigDirectorMethodOnRspOrderLocalModify);
    
      swigDelegate48 = new SwigDelegateITapTradeAPINotify_48(SwigDirectorMethodOnRspOrderLocalTransfer);
    
      swigDelegate49 = new SwigDelegateITapTradeAPINotify_49(SwigDirectorMethodOnRspFillLocalInput);
    
      swigDelegate50 = new SwigDelegateITapTradeAPINotify_50(SwigDirectorMethodOnRspFillLocalRemove);
    
      swigDelegate51 = new SwigDelegateITapTradeAPINotify_51(SwigDirectorMethodOnRspQrySpotLock);
    
      swigDelegate52 = new SwigDelegateITapTradeAPINotify_52(SwigDirectorMethodOnRtnSpotLock);
    
      swigDelegate53 = new SwigDelegateITapTradeAPINotify_53(SwigDirectorMethodOnRspSubmitUserLoginInfo);
    
      swigDelegate54 = new SwigDelegateITapTradeAPINotify_54(SwigDirectorMethodOnRspSpecialOrderAction);
    
      swigDelegate55 = new SwigDelegateITapTradeAPINotify_55(SwigDirectorMethodOnRtnSpecialOrder);
    
      swigDelegate56 = new SwigDelegateITapTradeAPINotify_56(SwigDirectorMethodOnRspQrySpecialOrder);
    
      swigDelegate57 = new SwigDelegateITapTradeAPINotify_57(SwigDirectorMethodOnRspQryCombinePosition);
    
      swigDelegate58 = new SwigDelegateITapTradeAPINotify_58(SwigDirectorMethodOnRtnCombinePosition);
    
      swigDelegate59 = new SwigDelegateITapTradeAPINotify_59(SwigDirectorMethodOnRspQryUserTrustDevice);
    
      swigDelegate60 = new SwigDelegateITapTradeAPINotify_60(SwigDirectorMethodOnRspAddUserTrustDevice);
    
      swigDelegate61 = new SwigDelegateITapTradeAPINotify_61(SwigDirectorMethodOnRspDelUserTrustDevice);
    
      swigDelegate62 = new SwigDelegateITapTradeAPINotify_62(SwigDirectorMethodOnRtnAddUserTrustDevice);
    
      swigDelegate63 = new SwigDelegateITapTradeAPINotify_63(SwigDirectorMethodOnRtnDelUserTrustDevice);
    
      swigDelegate64 = new SwigDelegateITapTradeAPINotify_64(SwigDirectorMethodOnRspQryIPOInfo);
    
      swigDelegate65 = new SwigDelegateITapTradeAPINotify_65(SwigDirectorMethodOnRspQryIPOStockQty);
    
      swigDelegate66 = new SwigDelegateITapTradeAPINotify_66(SwigDirectorMethodOnRspQryAccountIPO);
    
      swigDelegate67 = new SwigDelegateITapTradeAPINotify_67(SwigDirectorMethodOnRspAddAccountIPO);
    
      swigDelegate68 = new SwigDelegateITapTradeAPINotify_68(SwigDirectorMethodOnRspCancelAccountIPO);
    
      swigDelegate69 = new SwigDelegateITapTradeAPINotify_69(SwigDirectorMethodOnRtnAddAccountIPO);
    
      swigDelegate70 = new SwigDelegateITapTradeAPINotify_70(SwigDirectorMethodOnRtnCancelAccountIPO);
    
      swigDelegate71 = new SwigDelegateITapTradeAPINotify_71(SwigDirectorMethodOnRspSelfPasswordInfoOperate);
    
      swigDelegate72 = new SwigDelegateITapTradeAPINotify_72(SwigDirectorMethodOnRspVerificateIdentityInfo);
    
      swigDelegate73 = new SwigDelegateITapTradeAPINotify_73(SwigDirectorMethodOnRspSetVertificateCode);
    
      swigDelegate74 = new SwigDelegateITapTradeAPINotify_74(SwigDirectorMethodOnRspResetPassword);
    
      swigDelegate75 = new SwigDelegateITapTradeAPINotify_75(SwigDirectorMethodOnRspQryExchangeStateInfo);
    
      swigDelegate76 = new SwigDelegateITapTradeAPINotify_76(SwigDirectorMethodOnRtnExchangeStateInfo);
    EsunnyITapApiPINVOKE.ITapTradeAPINotify_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11, swigDelegate12, swigDelegate13, swigDelegate14, swigDelegate15, swigDelegate16, swigDelegate17, swigDelegate18, swigDelegate19, swigDelegate20, swigDelegate21, swigDelegate22, swigDelegate23, swigDelegate24, swigDelegate25, swigDelegate26, swigDelegate27, swigDelegate28, swigDelegate29, swigDelegate30, swigDelegate31, swigDelegate32, swigDelegate33, swigDelegate34, swigDelegate35, swigDelegate36, swigDelegate37, swigDelegate38, swigDelegate39, swigDelegate40, swigDelegate41, swigDelegate42, swigDelegate43, swigDelegate44, swigDelegate45, swigDelegate46, swigDelegate47, swigDelegate48, swigDelegate49, swigDelegate50, swigDelegate51, swigDelegate52, swigDelegate53, swigDelegate54, swigDelegate55, swigDelegate56, swigDelegate57, swigDelegate58, swigDelegate59, swigDelegate60, swigDelegate61, swigDelegate62, swigDelegate63, swigDelegate64, swigDelegate65, swigDelegate66, swigDelegate67, swigDelegate68, swigDelegate69, swigDelegate70, swigDelegate71, swigDelegate72, swigDelegate73, swigDelegate74, swigDelegate75, swigDelegate76);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo[] methodInfos = this.GetType().GetMethods(
        global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance);
    foreach (global::System.Reflection.MethodInfo methodInfo in methodInfos) {
      if (methodInfo.DeclaringType == null)
        continue;

      if (methodInfo.Name != methodName)
        continue;

      var parameters = methodInfo.GetParameters();
      if (parameters.Length != methodTypes.Length)
        continue;

      bool parametersMatch = true;
      for (var i = 0; i < parameters.Length; i++) {
        if (parameters[i].ParameterType != methodTypes[i]) {
          parametersMatch = false;
          break;
        }
      }

      if (!parametersMatch)
        continue;

      if (methodInfo.IsVirtual && (methodInfo.DeclaringType.IsSubclassOf(typeof(ITapTradeAPINotify))) &&
        methodInfo.DeclaringType != methodInfo.GetBaseDefinition().DeclaringType) {
        return true;
      }
    }

    return false;
  }

  private void SwigDirectorMethodOnConnect(string HostAddress) {
    OnConnect(HostAddress);
  }

  private void SwigDirectorMethodOnRspLogin(int errorCode, global::System.IntPtr loginRspInfo) {
    OnRspLogin(errorCode, (loginRspInfo == global::System.IntPtr.Zero) ? null : new TapAPITradeLoginRspInfo(loginRspInfo, false));
  }

  private void SwigDirectorMethodOnRtnContactInfo(int errorCode, char isLast, string ContactInfo) {
    OnRtnContactInfo(errorCode, isLast, ContactInfo);
  }

  private void SwigDirectorMethodOnRspRequestVertificateCode(uint sessionID, int errorCode, global::System.IntPtr rsp) {
    OnRspRequestVertificateCode(sessionID, errorCode, (rsp == global::System.IntPtr.Zero) ? null : new TapAPIRequestVertificateCodeRsp(rsp, false));
  }

  private void SwigDirectorMethodOnExpriationDate(string date, int days) {
    OnExpriationDate(date, days);
  }

  private void SwigDirectorMethodOnAPIReady(int errorCode) {
    OnAPIReady(errorCode);
  }

  private void SwigDirectorMethodOnDisconnect(int reasonCode) {
    OnDisconnect(reasonCode);
  }

  private void SwigDirectorMethodOnRspChangePassword(uint sessionID, int errorCode) {
    OnRspChangePassword(sessionID, errorCode);
  }

  private void SwigDirectorMethodOnRspAuthPassword(uint sessionID, int errorCode) {
    OnRspAuthPassword(sessionID, errorCode);
  }

  private void SwigDirectorMethodOnRspQryTradingDate(uint sessionID, int errorCode, global::System.IntPtr info) {
    OnRspQryTradingDate(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPITradingCalendarQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRspSetReservedInfo(uint sessionID, int errorCode, string info) {
    OnRspSetReservedInfo(sessionID, errorCode, info);
  }

  private void SwigDirectorMethodOnRspQryAccount(uint sessionID, uint errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryAccount(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIAccountInfo(info, false));
  }

  private void SwigDirectorMethodOnRspQryFund(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryFund(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIFundData(info, false));
  }

  private void SwigDirectorMethodOnRtnFund(global::System.IntPtr info) {
    OnRtnFund((info == global::System.IntPtr.Zero) ? null : new TapAPIFundData(info, false));
  }

  private void SwigDirectorMethodOnRspQryExchange(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryExchange(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIExchangeInfo(info, false));
  }

  private void SwigDirectorMethodOnRspQryCommodity(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryCommodity(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPICommodityInfo(info, false));
  }

  private void SwigDirectorMethodOnRspQryContract(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryContract(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPITradeContractInfo(info, false));
  }

  private void SwigDirectorMethodOnRtnContract(global::System.IntPtr info) {
    OnRtnContract((info == global::System.IntPtr.Zero) ? null : new TapAPITradeContractInfo(info, false));
  }

  private void SwigDirectorMethodOnRspOrderAction(uint sessionID, int errorCode, global::System.IntPtr info) {
    OnRspOrderAction(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIOrderActionRsp(info, false));
  }

  private void SwigDirectorMethodOnRtnOrder(global::System.IntPtr info) {
    OnRtnOrder((info == global::System.IntPtr.Zero) ? null : new TapAPIOrderInfoNotice(info, false));
  }

  private void SwigDirectorMethodOnRspQryOrder(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryOrder(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIOrderInfo(info, false));
  }

  private void SwigDirectorMethodOnRspQryOrderProcess(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryOrderProcess(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIOrderInfo(info, false));
  }

  private void SwigDirectorMethodOnRspQryFill(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryFill(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIFillInfo(info, false));
  }

  private void SwigDirectorMethodOnRtnFill(global::System.IntPtr info) {
    OnRtnFill((info == global::System.IntPtr.Zero) ? null : new TapAPIFillInfo(info, false));
  }

  private void SwigDirectorMethodOnRspQryPosition(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryPosition(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIPositionInfo(info, false));
  }

  private void SwigDirectorMethodOnRtnPosition(global::System.IntPtr info) {
    OnRtnPosition((info == global::System.IntPtr.Zero) ? null : new TapAPIPositionInfo(info, false));
  }

  private void SwigDirectorMethodOnRspQryPositionSummary(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryPositionSummary(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIPositionSummary(info, false));
  }

  private void SwigDirectorMethodOnRtnPositionSummary(global::System.IntPtr info) {
    OnRtnPositionSummary((info == global::System.IntPtr.Zero) ? null : new TapAPIPositionSummary(info, false));
  }

  private void SwigDirectorMethodOnRtnPositionProfit(global::System.IntPtr info) {
    OnRtnPositionProfit((info == global::System.IntPtr.Zero) ? null : new TapAPIPositionProfitNotice(info, false));
  }

  private void SwigDirectorMethodOnRspQryCurrency(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryCurrency(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPICurrencyInfo(info, false));
  }

  private void SwigDirectorMethodOnRspQryTradeMessage(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryTradeMessage(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPITradeMessage(info, false));
  }

  private void SwigDirectorMethodOnRtnTradeMessage(global::System.IntPtr info) {
    OnRtnTradeMessage((info == global::System.IntPtr.Zero) ? null : new TapAPITradeMessage(info, false));
  }

  private void SwigDirectorMethodOnRspQryHisOrder(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryHisOrder(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIHisOrderQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRspQryHisOrderProcess(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryHisOrderProcess(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIHisOrderQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRspQryHisMatch(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryHisMatch(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIHisMatchQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRspQryHisPosition(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryHisPosition(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIHisPositionQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRspQryHisDelivery(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryHisDelivery(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIHisDeliveryQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRspQryHisFund(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryHisFund(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIHisFundQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRspQryAccountCashAdjust(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryAccountCashAdjust(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIAccountCashAdjustQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRspQryBill(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryBill(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIBillQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRspQryAccountFeeRent(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryAccountFeeRent(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIAccountFeeRentQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRspQryAccountMarginRent(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryAccountMarginRent(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIAccountMarginRentQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRspHKMarketOrderInsert(uint sessionID, int errorCode, global::System.IntPtr info) {
    OnRspHKMarketOrderInsert(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIOrderMarketInsertRsp(info, false));
  }

  private void SwigDirectorMethodOnRspHKMarketOrderDelete(uint sessionID, int errorCode, global::System.IntPtr info) {
    OnRspHKMarketOrderDelete(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIOrderMarketInsertRsp(info, false));
  }

  private void SwigDirectorMethodOnHKMarketQuoteNotice(global::System.IntPtr info) {
    OnHKMarketQuoteNotice((info == global::System.IntPtr.Zero) ? null : new TapAPIOrderQuoteMarketNotice(info, false));
  }

  private void SwigDirectorMethodOnRspOrderLocalRemove(uint sessionID, int errorCode, global::System.IntPtr info) {
    OnRspOrderLocalRemove(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIOrderLocalRemoveRsp(info, false));
  }

  private void SwigDirectorMethodOnRspOrderLocalInput(uint sessionID, int errorCode, global::System.IntPtr info) {
    OnRspOrderLocalInput(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIOrderInfo(info, false));
  }

  private void SwigDirectorMethodOnRspOrderLocalModify(uint sessionID, int errorCode, global::System.IntPtr info) {
    OnRspOrderLocalModify(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIOrderInfo(info, false));
  }

  private void SwigDirectorMethodOnRspOrderLocalTransfer(uint sessionID, int errorCode, global::System.IntPtr info) {
    OnRspOrderLocalTransfer(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIOrderInfo(info, false));
  }

  private void SwigDirectorMethodOnRspFillLocalInput(uint sessionID, int errorCode, global::System.IntPtr info) {
    OnRspFillLocalInput(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIFillLocalInputReq(info, false));
  }

  private void SwigDirectorMethodOnRspFillLocalRemove(uint sessionID, int errorCode, global::System.IntPtr info) {
    OnRspFillLocalRemove(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIFillLocalRemoveReq(info, false));
  }

  private void SwigDirectorMethodOnRspQrySpotLock(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQrySpotLock(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPISpotLockDataRsp(info, false));
  }

  private void SwigDirectorMethodOnRtnSpotLock(global::System.IntPtr info) {
    OnRtnSpotLock((info == global::System.IntPtr.Zero) ? null : new TapAPISpotLockDataRsp(info, false));
  }

  private void SwigDirectorMethodOnRspSubmitUserLoginInfo(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspSubmitUserLoginInfo(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPISubmitUserLoginRspInfo(info, false));
  }

  private void SwigDirectorMethodOnRspSpecialOrderAction(uint sessionID, int errorCode, global::System.IntPtr info) {
    OnRspSpecialOrderAction(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPISpecialOrderInfo(info, false));
  }

  private void SwigDirectorMethodOnRtnSpecialOrder(global::System.IntPtr info) {
    OnRtnSpecialOrder((info == global::System.IntPtr.Zero) ? null : new TapAPISpecialOrderInfo(info, false));
  }

  private void SwigDirectorMethodOnRspQrySpecialOrder(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQrySpecialOrder(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPISpecialOrderInfo(info, false));
  }

  private void SwigDirectorMethodOnRspQryCombinePosition(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryCombinePosition(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPICombinePositionInfo(info, false));
  }

  private void SwigDirectorMethodOnRtnCombinePosition(global::System.IntPtr info) {
    OnRtnCombinePosition((info == global::System.IntPtr.Zero) ? null : new TapAPICombinePositionInfo(info, false));
  }

  private void SwigDirectorMethodOnRspQryUserTrustDevice(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryUserTrustDevice(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIUserTrustDeviceQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRspAddUserTrustDevice(uint sessionID, int errorCode, global::System.IntPtr info) {
    OnRspAddUserTrustDevice(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIUserTrustDeviceQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRspDelUserTrustDevice(uint sessionID, int errorCode, global::System.IntPtr info) {
    OnRspDelUserTrustDevice(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIUserTrustDeviceDelReq(info, false));
  }

  private void SwigDirectorMethodOnRtnAddUserTrustDevice(global::System.IntPtr info) {
    OnRtnAddUserTrustDevice((info == global::System.IntPtr.Zero) ? null : new TapAPIUserTrustDeviceQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRtnDelUserTrustDevice(global::System.IntPtr info) {
    OnRtnDelUserTrustDevice((info == global::System.IntPtr.Zero) ? null : new TapAPIUserTrustDeviceDelReq(info, false));
  }

  private void SwigDirectorMethodOnRspQryIPOInfo(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryIPOInfo(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIIPOInfoQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRspQryIPOStockQty(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryIPOStockQty(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIAvailableApplyQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRspQryAccountIPO(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryAccountIPO(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIAccountIPOQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRspAddAccountIPO(uint sessionID, int errorCode, global::System.IntPtr info) {
    OnRspAddAccountIPO(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIAccountIPOQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRspCancelAccountIPO(uint sessionID, int errorCode, global::System.IntPtr info) {
    OnRspCancelAccountIPO(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIAccountIPOQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRtnAddAccountIPO(global::System.IntPtr info) {
    OnRtnAddAccountIPO((info == global::System.IntPtr.Zero) ? null : new TapAPIAccountIPOQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRtnCancelAccountIPO(global::System.IntPtr info) {
    OnRtnCancelAccountIPO((info == global::System.IntPtr.Zero) ? null : new TapAPIAccountIPOQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRspSelfPasswordInfoOperate(int errorCode) {
    OnRspSelfPasswordInfoOperate(errorCode);
  }

  private void SwigDirectorMethodOnRspVerificateIdentityInfo(uint sessionID, int errorCode) {
    OnRspVerificateIdentityInfo(sessionID, errorCode);
  }

  private void SwigDirectorMethodOnRspSetVertificateCode(uint sessionID, int errorCode) {
    OnRspSetVertificateCode(sessionID, errorCode);
  }

  private void SwigDirectorMethodOnRspResetPassword(uint sessionID, int errorCode) {
    OnRspResetPassword(sessionID, errorCode);
  }

  private void SwigDirectorMethodOnRspQryExchangeStateInfo(uint sessionID, int errorCode, char isLast, global::System.IntPtr info) {
    OnRspQryExchangeStateInfo(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIExchangeStateInfoQryRsp(info, false));
  }

  private void SwigDirectorMethodOnRtnExchangeStateInfo(global::System.IntPtr info) {
    OnRtnExchangeStateInfo((info == global::System.IntPtr.Zero) ? null : new TapAPIExchangeStateInfoQryRsp(info, false));
  }

  public delegate void SwigDelegateITapTradeAPINotify_0(string HostAddress);
  public delegate void SwigDelegateITapTradeAPINotify_1(int errorCode, global::System.IntPtr loginRspInfo);
  public delegate void SwigDelegateITapTradeAPINotify_2(int errorCode, char isLast, string ContactInfo);
  public delegate void SwigDelegateITapTradeAPINotify_3(uint sessionID, int errorCode, global::System.IntPtr rsp);
  public delegate void SwigDelegateITapTradeAPINotify_4(string date, int days);
  public delegate void SwigDelegateITapTradeAPINotify_5(int errorCode);
  public delegate void SwigDelegateITapTradeAPINotify_6(int reasonCode);
  public delegate void SwigDelegateITapTradeAPINotify_7(uint sessionID, int errorCode);
  public delegate void SwigDelegateITapTradeAPINotify_8(uint sessionID, int errorCode);
  public delegate void SwigDelegateITapTradeAPINotify_9(uint sessionID, int errorCode, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_10(uint sessionID, int errorCode, string info);
  public delegate void SwigDelegateITapTradeAPINotify_11(uint sessionID, uint errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_12(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_13(global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_14(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_15(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_16(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_17(global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_18(uint sessionID, int errorCode, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_19(global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_20(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_21(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_22(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_23(global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_24(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_25(global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_26(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_27(global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_28(global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_29(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_30(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_31(global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_32(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_33(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_34(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_35(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_36(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_37(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_38(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_39(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_40(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_41(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_42(uint sessionID, int errorCode, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_43(uint sessionID, int errorCode, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_44(global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_45(uint sessionID, int errorCode, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_46(uint sessionID, int errorCode, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_47(uint sessionID, int errorCode, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_48(uint sessionID, int errorCode, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_49(uint sessionID, int errorCode, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_50(uint sessionID, int errorCode, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_51(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_52(global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_53(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_54(uint sessionID, int errorCode, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_55(global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_56(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_57(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_58(global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_59(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_60(uint sessionID, int errorCode, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_61(uint sessionID, int errorCode, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_62(global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_63(global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_64(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_65(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_66(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_67(uint sessionID, int errorCode, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_68(uint sessionID, int errorCode, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_69(global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_70(global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_71(int errorCode);
  public delegate void SwigDelegateITapTradeAPINotify_72(uint sessionID, int errorCode);
  public delegate void SwigDelegateITapTradeAPINotify_73(uint sessionID, int errorCode);
  public delegate void SwigDelegateITapTradeAPINotify_74(uint sessionID, int errorCode);
  public delegate void SwigDelegateITapTradeAPINotify_75(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
  public delegate void SwigDelegateITapTradeAPINotify_76(global::System.IntPtr info);

  private SwigDelegateITapTradeAPINotify_0 swigDelegate0;
  private SwigDelegateITapTradeAPINotify_1 swigDelegate1;
  private SwigDelegateITapTradeAPINotify_2 swigDelegate2;
  private SwigDelegateITapTradeAPINotify_3 swigDelegate3;
  private SwigDelegateITapTradeAPINotify_4 swigDelegate4;
  private SwigDelegateITapTradeAPINotify_5 swigDelegate5;
  private SwigDelegateITapTradeAPINotify_6 swigDelegate6;
  private SwigDelegateITapTradeAPINotify_7 swigDelegate7;
  private SwigDelegateITapTradeAPINotify_8 swigDelegate8;
  private SwigDelegateITapTradeAPINotify_9 swigDelegate9;
  private SwigDelegateITapTradeAPINotify_10 swigDelegate10;
  private SwigDelegateITapTradeAPINotify_11 swigDelegate11;
  private SwigDelegateITapTradeAPINotify_12 swigDelegate12;
  private SwigDelegateITapTradeAPINotify_13 swigDelegate13;
  private SwigDelegateITapTradeAPINotify_14 swigDelegate14;
  private SwigDelegateITapTradeAPINotify_15 swigDelegate15;
  private SwigDelegateITapTradeAPINotify_16 swigDelegate16;
  private SwigDelegateITapTradeAPINotify_17 swigDelegate17;
  private SwigDelegateITapTradeAPINotify_18 swigDelegate18;
  private SwigDelegateITapTradeAPINotify_19 swigDelegate19;
  private SwigDelegateITapTradeAPINotify_20 swigDelegate20;
  private SwigDelegateITapTradeAPINotify_21 swigDelegate21;
  private SwigDelegateITapTradeAPINotify_22 swigDelegate22;
  private SwigDelegateITapTradeAPINotify_23 swigDelegate23;
  private SwigDelegateITapTradeAPINotify_24 swigDelegate24;
  private SwigDelegateITapTradeAPINotify_25 swigDelegate25;
  private SwigDelegateITapTradeAPINotify_26 swigDelegate26;
  private SwigDelegateITapTradeAPINotify_27 swigDelegate27;
  private SwigDelegateITapTradeAPINotify_28 swigDelegate28;
  private SwigDelegateITapTradeAPINotify_29 swigDelegate29;
  private SwigDelegateITapTradeAPINotify_30 swigDelegate30;
  private SwigDelegateITapTradeAPINotify_31 swigDelegate31;
  private SwigDelegateITapTradeAPINotify_32 swigDelegate32;
  private SwigDelegateITapTradeAPINotify_33 swigDelegate33;
  private SwigDelegateITapTradeAPINotify_34 swigDelegate34;
  private SwigDelegateITapTradeAPINotify_35 swigDelegate35;
  private SwigDelegateITapTradeAPINotify_36 swigDelegate36;
  private SwigDelegateITapTradeAPINotify_37 swigDelegate37;
  private SwigDelegateITapTradeAPINotify_38 swigDelegate38;
  private SwigDelegateITapTradeAPINotify_39 swigDelegate39;
  private SwigDelegateITapTradeAPINotify_40 swigDelegate40;
  private SwigDelegateITapTradeAPINotify_41 swigDelegate41;
  private SwigDelegateITapTradeAPINotify_42 swigDelegate42;
  private SwigDelegateITapTradeAPINotify_43 swigDelegate43;
  private SwigDelegateITapTradeAPINotify_44 swigDelegate44;
  private SwigDelegateITapTradeAPINotify_45 swigDelegate45;
  private SwigDelegateITapTradeAPINotify_46 swigDelegate46;
  private SwigDelegateITapTradeAPINotify_47 swigDelegate47;
  private SwigDelegateITapTradeAPINotify_48 swigDelegate48;
  private SwigDelegateITapTradeAPINotify_49 swigDelegate49;
  private SwigDelegateITapTradeAPINotify_50 swigDelegate50;
  private SwigDelegateITapTradeAPINotify_51 swigDelegate51;
  private SwigDelegateITapTradeAPINotify_52 swigDelegate52;
  private SwigDelegateITapTradeAPINotify_53 swigDelegate53;
  private SwigDelegateITapTradeAPINotify_54 swigDelegate54;
  private SwigDelegateITapTradeAPINotify_55 swigDelegate55;
  private SwigDelegateITapTradeAPINotify_56 swigDelegate56;
  private SwigDelegateITapTradeAPINotify_57 swigDelegate57;
  private SwigDelegateITapTradeAPINotify_58 swigDelegate58;
  private SwigDelegateITapTradeAPINotify_59 swigDelegate59;
  private SwigDelegateITapTradeAPINotify_60 swigDelegate60;
  private SwigDelegateITapTradeAPINotify_61 swigDelegate61;
  private SwigDelegateITapTradeAPINotify_62 swigDelegate62;
  private SwigDelegateITapTradeAPINotify_63 swigDelegate63;
  private SwigDelegateITapTradeAPINotify_64 swigDelegate64;
  private SwigDelegateITapTradeAPINotify_65 swigDelegate65;
  private SwigDelegateITapTradeAPINotify_66 swigDelegate66;
  private SwigDelegateITapTradeAPINotify_67 swigDelegate67;
  private SwigDelegateITapTradeAPINotify_68 swigDelegate68;
  private SwigDelegateITapTradeAPINotify_69 swigDelegate69;
  private SwigDelegateITapTradeAPINotify_70 swigDelegate70;
  private SwigDelegateITapTradeAPINotify_71 swigDelegate71;
  private SwigDelegateITapTradeAPINotify_72 swigDelegate72;
  private SwigDelegateITapTradeAPINotify_73 swigDelegate73;
  private SwigDelegateITapTradeAPINotify_74 swigDelegate74;
  private SwigDelegateITapTradeAPINotify_75 swigDelegate75;
  private SwigDelegateITapTradeAPINotify_76 swigDelegate76;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] { typeof(string) };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] { typeof(int), typeof(TapAPITradeLoginRspInfo) };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] { typeof(int), typeof(char), typeof(string) };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIRequestVertificateCodeRsp) };
  private static global::System.Type[] swigMethodTypes4 = new global::System.Type[] { typeof(string), typeof(int) };
  private static global::System.Type[] swigMethodTypes5 = new global::System.Type[] { typeof(int) };
  private static global::System.Type[] swigMethodTypes6 = new global::System.Type[] { typeof(int) };
  private static global::System.Type[] swigMethodTypes7 = new global::System.Type[] { typeof(uint), typeof(int) };
  private static global::System.Type[] swigMethodTypes8 = new global::System.Type[] { typeof(uint), typeof(int) };
  private static global::System.Type[] swigMethodTypes9 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPITradingCalendarQryRsp) };
  private static global::System.Type[] swigMethodTypes10 = new global::System.Type[] { typeof(uint), typeof(int), typeof(string) };
  private static global::System.Type[] swigMethodTypes11 = new global::System.Type[] { typeof(uint), typeof(uint), typeof(char), typeof(TapAPIAccountInfo) };
  private static global::System.Type[] swigMethodTypes12 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIFundData) };
  private static global::System.Type[] swigMethodTypes13 = new global::System.Type[] { typeof(TapAPIFundData) };
  private static global::System.Type[] swigMethodTypes14 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIExchangeInfo) };
  private static global::System.Type[] swigMethodTypes15 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPICommodityInfo) };
  private static global::System.Type[] swigMethodTypes16 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPITradeContractInfo) };
  private static global::System.Type[] swigMethodTypes17 = new global::System.Type[] { typeof(TapAPITradeContractInfo) };
  private static global::System.Type[] swigMethodTypes18 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIOrderActionRsp) };
  private static global::System.Type[] swigMethodTypes19 = new global::System.Type[] { typeof(TapAPIOrderInfoNotice) };
  private static global::System.Type[] swigMethodTypes20 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIOrderInfo) };
  private static global::System.Type[] swigMethodTypes21 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIOrderInfo) };
  private static global::System.Type[] swigMethodTypes22 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIFillInfo) };
  private static global::System.Type[] swigMethodTypes23 = new global::System.Type[] { typeof(TapAPIFillInfo) };
  private static global::System.Type[] swigMethodTypes24 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIPositionInfo) };
  private static global::System.Type[] swigMethodTypes25 = new global::System.Type[] { typeof(TapAPIPositionInfo) };
  private static global::System.Type[] swigMethodTypes26 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIPositionSummary) };
  private static global::System.Type[] swigMethodTypes27 = new global::System.Type[] { typeof(TapAPIPositionSummary) };
  private static global::System.Type[] swigMethodTypes28 = new global::System.Type[] { typeof(TapAPIPositionProfitNotice) };
  private static global::System.Type[] swigMethodTypes29 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPICurrencyInfo) };
  private static global::System.Type[] swigMethodTypes30 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPITradeMessage) };
  private static global::System.Type[] swigMethodTypes31 = new global::System.Type[] { typeof(TapAPITradeMessage) };
  private static global::System.Type[] swigMethodTypes32 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIHisOrderQryRsp) };
  private static global::System.Type[] swigMethodTypes33 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIHisOrderQryRsp) };
  private static global::System.Type[] swigMethodTypes34 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIHisMatchQryRsp) };
  private static global::System.Type[] swigMethodTypes35 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIHisPositionQryRsp) };
  private static global::System.Type[] swigMethodTypes36 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIHisDeliveryQryRsp) };
  private static global::System.Type[] swigMethodTypes37 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIHisFundQryRsp) };
  private static global::System.Type[] swigMethodTypes38 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIAccountCashAdjustQryRsp) };
  private static global::System.Type[] swigMethodTypes39 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIBillQryRsp) };
  private static global::System.Type[] swigMethodTypes40 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIAccountFeeRentQryRsp) };
  private static global::System.Type[] swigMethodTypes41 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIAccountMarginRentQryRsp) };
  private static global::System.Type[] swigMethodTypes42 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIOrderMarketInsertRsp) };
  private static global::System.Type[] swigMethodTypes43 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIOrderMarketInsertRsp) };
  private static global::System.Type[] swigMethodTypes44 = new global::System.Type[] { typeof(TapAPIOrderQuoteMarketNotice) };
  private static global::System.Type[] swigMethodTypes45 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIOrderLocalRemoveRsp) };
  private static global::System.Type[] swigMethodTypes46 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIOrderInfo) };
  private static global::System.Type[] swigMethodTypes47 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIOrderInfo) };
  private static global::System.Type[] swigMethodTypes48 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIOrderInfo) };
  private static global::System.Type[] swigMethodTypes49 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIFillLocalInputReq) };
  private static global::System.Type[] swigMethodTypes50 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIFillLocalRemoveReq) };
  private static global::System.Type[] swigMethodTypes51 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPISpotLockDataRsp) };
  private static global::System.Type[] swigMethodTypes52 = new global::System.Type[] { typeof(TapAPISpotLockDataRsp) };
  private static global::System.Type[] swigMethodTypes53 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPISubmitUserLoginRspInfo) };
  private static global::System.Type[] swigMethodTypes54 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPISpecialOrderInfo) };
  private static global::System.Type[] swigMethodTypes55 = new global::System.Type[] { typeof(TapAPISpecialOrderInfo) };
  private static global::System.Type[] swigMethodTypes56 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPISpecialOrderInfo) };
  private static global::System.Type[] swigMethodTypes57 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPICombinePositionInfo) };
  private static global::System.Type[] swigMethodTypes58 = new global::System.Type[] { typeof(TapAPICombinePositionInfo) };
  private static global::System.Type[] swigMethodTypes59 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIUserTrustDeviceQryRsp) };
  private static global::System.Type[] swigMethodTypes60 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIUserTrustDeviceQryRsp) };
  private static global::System.Type[] swigMethodTypes61 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIUserTrustDeviceDelReq) };
  private static global::System.Type[] swigMethodTypes62 = new global::System.Type[] { typeof(TapAPIUserTrustDeviceQryRsp) };
  private static global::System.Type[] swigMethodTypes63 = new global::System.Type[] { typeof(TapAPIUserTrustDeviceDelReq) };
  private static global::System.Type[] swigMethodTypes64 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIIPOInfoQryRsp) };
  private static global::System.Type[] swigMethodTypes65 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIAvailableApplyQryRsp) };
  private static global::System.Type[] swigMethodTypes66 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIAccountIPOQryRsp) };
  private static global::System.Type[] swigMethodTypes67 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIAccountIPOQryRsp) };
  private static global::System.Type[] swigMethodTypes68 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIAccountIPOQryRsp) };
  private static global::System.Type[] swigMethodTypes69 = new global::System.Type[] { typeof(TapAPIAccountIPOQryRsp) };
  private static global::System.Type[] swigMethodTypes70 = new global::System.Type[] { typeof(TapAPIAccountIPOQryRsp) };
  private static global::System.Type[] swigMethodTypes71 = new global::System.Type[] { typeof(int) };
  private static global::System.Type[] swigMethodTypes72 = new global::System.Type[] { typeof(uint), typeof(int) };
  private static global::System.Type[] swigMethodTypes73 = new global::System.Type[] { typeof(uint), typeof(int) };
  private static global::System.Type[] swigMethodTypes74 = new global::System.Type[] { typeof(uint), typeof(int) };
  private static global::System.Type[] swigMethodTypes75 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIExchangeStateInfoQryRsp) };
  private static global::System.Type[] swigMethodTypes76 = new global::System.Type[] { typeof(TapAPIExchangeStateInfoQryRsp) };
}

}
