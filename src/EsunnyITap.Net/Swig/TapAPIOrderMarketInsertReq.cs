//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace EsunnyITap.Net {

public class TapAPIOrderMarketInsertReq : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal TapAPIOrderMarketInsertReq(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(TapAPIOrderMarketInsertReq obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(TapAPIOrderMarketInsertReq obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~TapAPIOrderMarketInsertReq() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          EsunnyITapApiPINVOKE.delete_TapAPIOrderMarketInsertReq(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public string AccountNo {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_AccountNo_set(swigCPtr, value);
    } 
    get {
      string ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_AccountNo_get(swigCPtr);
      return ret;
    } 
  }

  public string ExchangeNo {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_ExchangeNo_set(swigCPtr, value);
    } 
    get {
      string ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_ExchangeNo_get(swigCPtr);
      return ret;
    } 
  }

  public char CommodityType {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_CommodityType_set(swigCPtr, value);
    } 
    get {
      char ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_CommodityType_get(swigCPtr);
      return ret;
    } 
  }

  public string CommodityNo {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_CommodityNo_set(swigCPtr, value);
    } 
    get {
      string ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_CommodityNo_get(swigCPtr);
      return ret;
    } 
  }

  public string ContractNo {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_ContractNo_set(swigCPtr, value);
    } 
    get {
      string ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_ContractNo_get(swigCPtr);
      return ret;
    } 
  }

  public string StrikePrice {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_StrikePrice_set(swigCPtr, value);
    } 
    get {
      string ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_StrikePrice_get(swigCPtr);
      return ret;
    } 
  }

  public char CallOrPutFlag {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_CallOrPutFlag_set(swigCPtr, value);
    } 
    get {
      char ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_CallOrPutFlag_get(swigCPtr);
      return ret;
    } 
  }

  public char OrderType {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_OrderType_set(swigCPtr, value);
    } 
    get {
      char ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_OrderType_get(swigCPtr);
      return ret;
    } 
  }

  public char TimeInForce {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_TimeInForce_set(swigCPtr, value);
    } 
    get {
      char ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_TimeInForce_get(swigCPtr);
      return ret;
    } 
  }

  public string ExpireTime {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_ExpireTime_set(swigCPtr, value);
    } 
    get {
      string ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_ExpireTime_get(swigCPtr);
      return ret;
    } 
  }

  public char OrderSource {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_OrderSource_set(swigCPtr, value);
    } 
    get {
      char ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_OrderSource_get(swigCPtr);
      return ret;
    } 
  }

  public char BuyPositionEffect {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_BuyPositionEffect_set(swigCPtr, value);
    } 
    get {
      char ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_BuyPositionEffect_get(swigCPtr);
      return ret;
    } 
  }

  public char SellPositionEffect {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_SellPositionEffect_set(swigCPtr, value);
    } 
    get {
      char ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_SellPositionEffect_get(swigCPtr);
      return ret;
    } 
  }

  public char AddOneIsValid {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_AddOneIsValid_set(swigCPtr, value);
    } 
    get {
      char ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_AddOneIsValid_get(swigCPtr);
      return ret;
    } 
  }

  public double OrderBuyPrice {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_OrderBuyPrice_set(swigCPtr, value);
    } 
    get {
      double ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_OrderBuyPrice_get(swigCPtr);
      return ret;
    } 
  }

  public double OrderSellPrice {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_OrderSellPrice_set(swigCPtr, value);
    } 
    get {
      double ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_OrderSellPrice_get(swigCPtr);
      return ret;
    } 
  }

  public uint OrderBuyQty {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_OrderBuyQty_set(swigCPtr, value);
    } 
    get {
      uint ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_OrderBuyQty_get(swigCPtr);
      return ret;
    } 
  }

  public uint OrderSellQty {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_OrderSellQty_set(swigCPtr, value);
    } 
    get {
      uint ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_OrderSellQty_get(swigCPtr);
      return ret;
    } 
  }

  public string ClientBuyOrderNo {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_ClientBuyOrderNo_set(swigCPtr, value);
    } 
    get {
      string ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_ClientBuyOrderNo_get(swigCPtr);
      return ret;
    } 
  }

  public string ClientSellOrderNo {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_ClientSellOrderNo_set(swigCPtr, value);
    } 
    get {
      string ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_ClientSellOrderNo_get(swigCPtr);
      return ret;
    } 
  }

  public int RefInt {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_RefInt_set(swigCPtr, value);
    } 
    get {
      int ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_RefInt_get(swigCPtr);
      return ret;
    } 
  }

  public double RefDouble {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_RefDouble_set(swigCPtr, value);
    } 
    get {
      double ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_RefDouble_get(swigCPtr);
      return ret;
    } 
  }

  public string RefString {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_RefString_set(swigCPtr, value);
    } 
    get {
      string ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_RefString_get(swigCPtr);
      return ret;
    } 
  }

  public string Remark {
    set {
      EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_Remark_set(swigCPtr, value);
    } 
    get {
      string ret = EsunnyITapApiPINVOKE.TapAPIOrderMarketInsertReq_Remark_get(swigCPtr);
      return ret;
    } 
  }

  public TapAPIOrderMarketInsertReq() : this(EsunnyITapApiPINVOKE.new_TapAPIOrderMarketInsertReq__SWIG_0(), true) {
  }

  public TapAPIOrderMarketInsertReq(TapAPIOrderMarketInsertReq other) : this(EsunnyITapApiPINVOKE.new_TapAPIOrderMarketInsertReq__SWIG_1(TapAPIOrderMarketInsertReq.getCPtr(other)), true) {
    if (EsunnyITapApiPINVOKE.SWIGPendingException.Pending) throw EsunnyITapApiPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
